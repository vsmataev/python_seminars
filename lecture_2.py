#  Урок 2. Коллекции данных. Профилирование и отладка

list_1 = [] # создание списка
list_1 = list() # создание функции "список"
list_1 = [1, 2, 4, 5, 6] # содание списка с заданными значениями

print (*list_1) # звездочка выведет список без скобок и запятых
print(list_1[1:3]) # от идекса 1 до индекса 3-1
print(list_1[:4]) # от нулевого до 4-1

# print(len(list_1)) # найдет и выведет КОЛИЧЕСТВО элемнтов в списке
print(list_1[len(list_1)-2:]) # выведет два последних элемента

# for i in list_1: # пройдет по всему списку и выведет каждый элемент с новой строки
#     print(i)

# print(list_1[0]) # выведет элемент списка с указанным индексом (в данном случае - 1)
# print(list_1[-1]) # выведет последний элемент из списка (если -2 - то предпоследний и т.д.)

# list_1.append(8) # добавит значение 8 В КОНЕЦ списка
# print(list_1)

# list_2 = []
# print(list_2)
# for i in range(5): # последовательно
#     list_2.append(i) # заполнит пустой список значениями от 0 до 4
#     print(list_2) # выведет каждый шаг

# print(list_1.pop()) # покажет и удалит последний элемент из списка (в данном случае 6)

# print(list_1)
# print(list_1.pop()) # можно использовать последовательно ( теперь удалится 5)
# print(list_1)
# a = list_1.pop() # удалит последний элемент (в данном случае 4) и присвоит пременной "а" его значение
# print(a)
# print(list_1)
# print(list_1.pop(0)) # удалит элемент по ИНДЕКСУ (в данном случае 1)
# print(list_1)

# list_3 = [3, 5, 6, 7, 8]
# print(list_3)
# list_3.insert(2, 11) # вставит значение 11 на позицию (индекс) 2
# print(list_3)

t = (1, 2, 3, 4) # создание кортежа (НЕИЗМЕНЯЕМОГО списка) - то же самое как список, только скобки круглые
print(type(t))

v= [1, 2, 3] # список
v=tuple(v) # стал массивом
a,b,c = v
a, b = 1, 2 

print(a, b, c)

d = {} # создание словаря. ключ и его значение указываются через ":"
d = dict()
d['q'] = 'qwerty'  # по ключу "q" выдаст "qwerty"
print(d)  # {'q': 'qwerty'}
print(d['q']) # qwerty
del d['q'] # удалит то, что соответствует ключу "q"

colors = {'red', 'green', 'blue'} # множество - список с уникальными (неповторяющимияся значениями)
colors.add('purple') # добавит мент в эмножество
colors.add('red') # не добавит (элемент "red" уже есть)
print(colors)
colors.remove('red') # удалит "red"
print(colors)