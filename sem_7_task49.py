"""Задача №49.
Планеты вращаются вокруг звезд по эллиптическим орбитам.Назовем самой далекой планетой ту, орбита которой имеет
самую большую площадь. Напишите функциюfind_farthest_orbit(list_of_orbits), которая среди списка орбит
планет найдет ту, по которой вращается самая далекая планета. Круговые орбиты не учитывайте: вы знаете, что у
вашей звезды таких планет нет, зато искусственные спутники были были запущены на круговые орбиты. Результатом
функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далекой планеты. Каждая орбита
представляет из себя кортеж из пары чисел - полуосей ее эллипса. Площадь эллипса вычисляется по формуле S = pi*a*b,
где a и b - длины полуосей эллипса. При решении задачи используйте списочные выражения. Подсказка: проще всего
будет найти эллипс в два шага: сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс,
имеющий такую площадь. Гарантируется, что самая далекая планета ровно одна
Ввод:
orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
print(*find_farthest_orbit(orbits))
Вывод:
2.5 10 """


import math

orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

# Фильтрация эллипсов (не кругов) и вычисление площадей
areas = [math.pi * a * b for a, b in orbits if a != b]

if areas:  # Проверка, есть ли эллипсы (не круги)
    max_orbit = orbits[areas.index(max(areas))]  # Находим эллипс с максимальной площадью
    print(max_orbit)
else:
    print("Все эллипсы являются кругами.")


def farthest_orbit(orbits):
    # Функция для вычисления расстояния между фокусами эллипсов
    def distance(orbit):
        a, b = orbit
        return math.sqrt(a**2 + b**2)

    # Вычисляем расстояния между фокусами для каждой орбиты
    distances = [distance(orbit) for orbit in orbits]

    # Находим индекс орбиты с самым большим расстоянием между фокусами
    max_index = distances.index(max(distances))

    # Возвращаем кортеж полуосей эллипса самой дальней орбиты
    return orbits[max_index]

# Пример списка орбит
orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

result = farthest_orbit(orbits)
print(result)