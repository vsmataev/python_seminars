"""Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
круглой грядке, причем кусты высажены только по окружности. Таким образом, у
каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
выросло различное число ягод – на i-ом кусте выросло ai
 ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым
кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может
собрать за один заход собирающий модуль, находясь перед некоторым кустом
заданной во входном файле грядки"""

"""по сути необходим алгоритм нахождения трех последовательных элементов с максимальной суммой"""

def max_sum_of_three(arr):
    max_sum = 0  # Начальное значение для суммы

    for i in range(len(arr) - 2):  # Проходим до предпоследнего элемента
        current_sum = arr[i] + arr[i + 1] + arr[i + 2]  # Считаем текущую сумму трех элементов
        if current_sum > max_sum:
            max_sum = current_sum

    return max_sum  # Возвращаем максимальную сумму (но не учитывает что кусты расположены по кругу)

# решение с семинара (с учетом того что кусты растут по кругу)

def max_berries_sem(array):
    #  создается новый список из array[] в который последовательно заносится 
    # сумма трех элементов и потом применяется max
    print(array)
    print([array[i - 2] + array[i - 1] + array[i] for i in range(len(array))])
    return max([array[i - 2] + array[i - 1] + array[i] for i in range(len(array))])


# решение с учетом условия

def max_berries(arr):
    max_sum = 0
    n = len(arr)
    for i in range(n):
        # Собираем суммы ягод с текущего куста и его двух соседей
        curr_sum = arr[i] + arr[(i + 1) % n] + arr[(i + 2) % n] # остаток от деления нужен если массив нелинейный
        max_sum = max(max_sum, curr_sum)  # Обновляем максимальную сумму

    return max_sum

# Пример ввода данных
bushes = [20, 8, 6, 4, 9, 2, 7, 10]  # Пример данных о ягодах на кустах
# Пример использования функции
result = max_sum_of_three(bushes)
print(f"Сумма трех последовательных элементов с максимальной суммой: {result}")
result = max_berries_sem(bushes)
print(f"Максимальное число ягод, которое может собрать собирающий модуль (семинар): {result}")
result = max_berries(bushes)
print(f"Максимальное число ягод, которое может собрать собирающий модуль: {result}")